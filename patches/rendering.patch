From 856182ce5edc8655fe22d5badc729105cb1daf41 Mon Sep 17 00:00:00 2001
From: Mark Vasilkov <MarkV@nsogroup.com>
Date: Thu, 7 May 2020 10:39:35 +0300
Subject: [PATCH] Rendering cleanup

---
 vendor/cmark/cmark-gfm.h | 60 ----------------------------------------
 1 file changed, 60 deletions(-)

diff --git a/vendor/cmark/cmark-gfm.h b/vendor/cmark/cmark-gfm.h
index e4cd491..3f8a97c 100644
--- a/vendor/cmark/cmark-gfm.h
+++ b/vendor/cmark/cmark-gfm.h
@@ -597,18 +597,6 @@ cmark_node *cmark_parse_file(FILE *f, int options);
  * ## Rendering
  */
 
-/** Render a 'node' tree as XML.  It is the caller's responsibility
- * to free the returned buffer.
- */
-CMARK_GFM_EXPORT
-char *cmark_render_xml(cmark_node *root, int options);
-
-/** As for 'cmark_render_xml', but specifying the allocator to use for
- * the resulting string.
- */
-CMARK_GFM_EXPORT
-char *cmark_render_xml_with_mem(cmark_node *root, int options, cmark_mem *mem);
-
 /** Render a 'node' tree as an HTML fragment.  It is up to the user
  * to add an appropriate header and footer. It is the caller's
  * responsibility to free the returned buffer.
@@ -622,54 +610,6 @@ char *cmark_render_html(cmark_node *root, int options, cmark_llist *extensions);
 CMARK_GFM_EXPORT
 char *cmark_render_html_with_mem(cmark_node *root, int options, cmark_llist *extensions, cmark_mem *mem);
 
-/** Render a 'node' tree as a groff man page, without the header.
- * It is the caller's responsibility to free the returned buffer.
- */
-CMARK_GFM_EXPORT
-char *cmark_render_man(cmark_node *root, int options, int width);
-
-/** As for 'cmark_render_man', but specifying the allocator to use for
- * the resulting string.
- */
-CMARK_GFM_EXPORT
-char *cmark_render_man_with_mem(cmark_node *root, int options, int width, cmark_mem *mem);
-
-/** Render a 'node' tree as a commonmark document.
- * It is the caller's responsibility to free the returned buffer.
- */
-CMARK_GFM_EXPORT
-char *cmark_render_commonmark(cmark_node *root, int options, int width);
-
-/** As for 'cmark_render_commonmark', but specifying the allocator to use for
- * the resulting string.
- */
-CMARK_GFM_EXPORT
-char *cmark_render_commonmark_with_mem(cmark_node *root, int options, int width, cmark_mem *mem);
-
-/** Render a 'node' tree as a plain text document.
- * It is the caller's responsibility to free the returned buffer.
- */
-CMARK_GFM_EXPORT
-char *cmark_render_plaintext(cmark_node *root, int options, int width);
-
-/** As for 'cmark_render_plaintext', but specifying the allocator to use for
- * the resulting string.
- */
-CMARK_GFM_EXPORT
-char *cmark_render_plaintext_with_mem(cmark_node *root, int options, int width, cmark_mem *mem);
-
-/** Render a 'node' tree as a LaTeX document.
- * It is the caller's responsibility to free the returned buffer.
- */
-CMARK_GFM_EXPORT
-char *cmark_render_latex(cmark_node *root, int options, int width);
-
-/** As for 'cmark_render_latex', but specifying the allocator to use for
- * the resulting string.
- */
-CMARK_GFM_EXPORT
-char *cmark_render_latex_with_mem(cmark_node *root, int options, int width, cmark_mem *mem);
-
 /**
  * ## Options
  */
-- 
2.24.1 (Apple Git-126)

